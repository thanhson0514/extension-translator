import React, { useEffect, useState } from "react";
import { ApiConfig, TranslationService } from "../types/translation";

const Options: React.FC = () => {
  // State cho c·∫•u h√¨nh
  const [config, setConfig] = useState<ApiConfig>({
    defaultTargetLanguage: "vi",
    defaultTranslationService: "google" as TranslationService,
  });

  // State cho th√¥ng b√°o
  const [notification, setNotification] = useState<{
    type: "success" | "error";
    message: string;
  } | null>(null);

  // L·∫•y c·∫•u h√¨nh ƒë√£ l∆∞u khi component ƒë∆∞·ª£c t·∫£i
  useEffect(() => {
    chrome.storage.sync.get(
      {
        defaultTargetLanguage: "vi",
        defaultTranslationService: "google",
      },
      (items) => {
        setConfig(items as ApiConfig);
      }
    );
  }, []);

  // X·ª≠ l√Ω khi thay ƒë·ªïi input
  const handleChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>
  ) => {
    const { name, value } = e.target;
    setConfig((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  // X·ª≠ l√Ω khi l∆∞u c·∫•u h√¨nh
  const handleSave = () => {
    chrome.storage.sync.set(config, () => {
      // Ki·ªÉm tra xem c√≥ l·ªói trong Chrome khi l∆∞u kh√¥ng
      if (chrome.runtime.lastError) {
        setNotification({
          type: "error",
          message: `L·ªói: ${chrome.runtime.lastError.message}`,
        });
      } else {
        setNotification({
          type: "success",
          message: "ƒê√£ l∆∞u c·∫•u h√¨nh th√†nh c√¥ng!",
        });

        // T·ª± ƒë·ªông ·∫©n th√¥ng b√°o sau 3 gi√¢y
        setTimeout(() => {
          setNotification(null);
        }, 3000);
      }
    });
  };

  return (
    <div className="container">
      <div className="header">
        <div className="logo">
          <span className="logo-icon">üîç</span>
          <span className="logo-text">AI Translator - T√πy ch·ªçn</span>
        </div>
      </div>

      {notification && (
        <div className={`alert alert-${notification.type}`}>
          {notification.message}
        </div>
      )}

      <div className="section">
        <h2 className="section-title">Th√¥ng tin</h2>
        <p className="info-text">
          Extension n√†y s·ª≠ d·ª•ng c√°c d·ªãch v·ª• d·ªãch mi·ªÖn ph√≠ kh√¥ng c·∫ßn API key.
          Ch·ª©c nƒÉng n√†y c√≥ th·ªÉ kh√¥ng ·ªïn ƒë·ªãnh trong d√†i h·∫°n n·∫øu c√°c d·ªãch v·ª• thay
          ƒë·ªïi.
        </p>
        <p className="info-text">
          - <strong>Google Translate</strong>: D·ªãch nhanh, ƒë∆°n gi·∫£n
        </p>
        <p className="info-text">
          - <strong>Advanced Translation</strong>: C·ªë g·∫Øng cung c·∫•p nhi·ªÅu nghƒ©a
          v√† ph√¢n t√≠ch ng·ªØ c·∫£nh
        </p>
      </div>

      <div className="section">
        <h2 className="section-title">T√πy ch·ªçn d·ªãch</h2>

        <div className="form-group">
          <label htmlFor="defaultTranslationService" className="form-label">
            D·ªãch v·ª• d·ªãch m·∫∑c ƒë·ªãnh
          </label>
          <select
            id="defaultTranslationService"
            name="defaultTranslationService"
            className="form-select"
            value={config.defaultTranslationService}
            onChange={handleChange}
          >
            <option value="chatgpt">Advanced Translation (nhi·ªÅu nghƒ©a)</option>
            <option value="google">Google Translate (nhanh h∆°n)</option>
          </select>
          <p className="form-description">
            Ch·ªçn d·ªãch v·ª• d·ªãch m·∫∑c ƒë·ªãnh khi s·ª≠ d·ª•ng extension.
          </p>
        </div>

        <div className="form-group">
          <label htmlFor="defaultTargetLanguage" className="form-label">
            Ng√¥n ng·ªØ d·ªãch m·∫∑c ƒë·ªãnh
          </label>
          <select
            id="defaultTargetLanguage"
            name="defaultTargetLanguage"
            className="form-select"
            value={config.defaultTargetLanguage}
            onChange={handleChange}
          >
            <option value="vi">Ti·∫øng Vi·ªát</option>
            <option value="en">Ti·∫øng Anh</option>
            <option value="zh-CN">Ti·∫øng Trung (Gi·∫£n th·ªÉ)</option>
            <option value="zh-TW">Ti·∫øng Trung (Ph·ªìn th·ªÉ)</option>
            <option value="ja">Ti·∫øng Nh·∫≠t</option>
            <option value="ko">Ti·∫øng H√†n</option>
            <option value="fr">Ti·∫øng Ph√°p</option>
            <option value="de">Ti·∫øng ƒê·ª©c</option>
            <option value="ru">Ti·∫øng Nga</option>
            <option value="es">Ti·∫øng T√¢y Ban Nha</option>
            <option value="pt">Ti·∫øng B·ªì ƒê√†o Nha</option>
            <option value="it">Ti·∫øng √ù</option>
            <option value="nl">Ti·∫øng H√† Lan</option>
            <option value="ar">Ti·∫øng ·∫¢ R·∫≠p</option>
            <option value="hi">Ti·∫øng Hindi</option>
            <option value="th">Ti·∫øng Th√°i</option>
          </select>
        </div>
      </div>

      <div className="button-row">
        <button className="save-button" onClick={handleSave}>
          L∆∞u c·∫•u h√¨nh
        </button>
      </div>

      <div className="footer">
        <p>AI Translator Extension - v1.1.0</p>
        <p className="disclaimer">
          L∆∞u √Ω: Extension n√†y ch·ªâ d√†nh cho m·ª•c ƒë√≠ch gi√°o d·ª•c v√† c√° nh√¢n.
        </p>
      </div>
    </div>
  );
};

export default Options;
